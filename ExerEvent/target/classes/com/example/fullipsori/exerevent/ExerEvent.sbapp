<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<modify version="11.0.0_248f263d973a774f84731121e9d4527c932d77fd">
    <add>
        <annotations>
            <annotation name="hygienic"/>
        </annotations>
        <type-metadata>
            <param name="type" value="module"/>
            <param name="fully-qualified-name" value="com.example.fullipsori.exerevent.ExerEvent"/>
        </type-metadata>
        <memory-model-settings/>
        <implements module-reference="com.example.fullipsori.exerevent.TestTable"/>
        <import from="com.example.fullipsori.exerevent.TestTable"/>
        <dynamic-variables/>
        <data name="QueryTable" shared="false" source="concrete" type="querytable">
            <param name="storage-method" value="heap"/>
            <param name="replicated" value="false"/>
            <param name="table-schema" value="testTable"/>
            <param name="truncate" value="false"/>
            <preload format="csv" mode="empty"/>
        </data>
        <box name="InputAdapter" type="inputadapter">
            <output port="1" stream="out:InputAdapter_1"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.once.Once"/>
            <param name="OutputField" value="time"/>
        </box>
        <box name="Map" type="map">
            <input port="1" stream="out:InputAdapter_1"/>
            <output port="1" stream="out:Map_1"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="filePath">"e:/projects/str/testdata.dat"</include>
                    <include field="time">input1.time</include>
                </expressions>
            </target-list>
        </box>
        <module-reference name="TestPythonRef2">
            <input name="InputStream" port="1" stream="out:Map_1"/>
            <output name="OutputStream" port="1" stream="out:TestPythonRef2_1"/>
            <param name="file" value="com.example.fullipsori.exerevent.TestPython"/>
        </module-reference>
        <box name="Map3" type="map">
            <input port="1" stream="out:TestPythonRef2_1"/>
            <output port="1" stream="out:Map3_1"/>
            <target-list>
                <item name="input" selection="all"/>
                <expressions>
                    <include field="queryId">range(1, 1000)</include>
                </expressions>
            </target-list>
        </box>
        <box name="Iterate2" type="iterate">
            <input port="1" stream="out:Map3_1"/>
            <output port="1" stream="out:Iterate2_1"/>
            <param name="iterate-expr" value="queryId"/>
            <target-list>
                <item name="input" selection="all"/>
                <expressions>
                    <include field="keyId">each.element</include>
                </expressions>
            </target-list>
        </box>
        <box name="Map4" type="map">
            <input port="1" stream="out:Iterate2_1"/>
            <output port="1" stream="out:Map4_1"/>
            <target-list>
                <item name="input" selection="all"/>
                <expressions>
                    <include field="devId">string(keyId)</include>
                    <include field="value">string(now())</include>
                </expressions>
            </target-list>
        </box>
        <box name="Query" type="query">
            <input port="1" stream="out:Map4_1"/>
            <output port="1" stream="out:Query_1"/>
            <dataref id="querytable" name="QueryTable"/>
            <param name="operation" value="write"/>
            <param name="where" value="primary-key"/>
            <param name="key-field.0" value="keyId"/>
            <param name="key-value.0" value="input1.keyId"/>
            <param name="write-type" value="insert"/>
            <param name="if-write-fails" value="ignore"/>
            <param name="no-match-mode" value="output-no-match-null"/>
            <param name="order-by-direction" value="none"/>
            <target-list>
                <item name="input" selection="all"/>
                <item name="old" selection="none"/>
                <item name="new" selection="none"/>
            </target-list>
            <target-list name="insert">
                <item name="input" selection="all"/>
                <expressions>
                    <set field="devId">devId</set>
                    <set field="value">value</set>
                </expressions>
            </target-list>
            <target-list name="update">
                <item name="input" selection="all"/>
            </target-list>
            <target-list name="no-match">
                <item name="input" selection="all"/>
            </target-list>
        </box>
        <box name="Map2" type="map">
            <input port="1" stream="out:Query_1"/>
            <output port="1" stream="out:Map2_1"/>
            <target-list>
                <item name="input" selection="all"/>
                <expressions>
                    <include field="list_item">range(0, 48)</include>
                </expressions>
            </target-list>
        </box>
        <box name="Iterate" type="iterate">
            <input port="1" stream="out:Map2_1"/>
            <output port="1" stream="out:Iterate_1"/>
            <param name="iterate-expr" value="list_item"/>
            <target-list>
                <item name="input" selection="all"/>
                <expressions>
                    <include field="element">each.element</include>
                </expressions>
            </target-list>
        </box>
        <box name="OutputAdapter" type="outputadapter">
            <input port="1" stream="out:Iterate_1"/>
            <output port="1" stream="out:OutputAdapter_1"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.logger.Log"/>
            <param name="CaptureStrategy" value="FLATTEN"/>
            <param name="asyncEnabled" value="true"/>
            <param name="compressFrequentMessages" value="false"/>
            <param name="compressMaxWindowSize" value="5.0"/>
            <param name="customFormat" value=""/>
            <param name="customFormatExpression" value=""/>
            <param name="customFormatType" value="Basic"/>
            <param name="emitLoggedTuples" value="true"/>
            <param name="encodeSubType" value="Map"/>
            <param name="hexEncodeBlobs" value="false"/>
            <param name="includeNullFields" value="false"/>
            <param name="logLevel" value="Info"/>
            <param name="logLevelOverrideFieldName" value=""/>
            <param name="loggerFormatType" value="CSV"/>
            <param name="messageIdentifier" value=""/>
            <param name="messageIdentifierExpression" value=""/>
            <param name="messageIdentifierType" value="Use EventFlow Name"/>
            <param name="messagePrefix" value=""/>
            <param name="moduleQualifiedEventFlowName" value="false"/>
            <param name="quoteNullStrings" value="true"/>
            <param name="timestampAsLong" value="false"/>
            <param name="timestampFormat" value="yyyy-MM-dd HH:mm:ss.SSSZ"/>
            <param name="verbose" value="false"/>
        </box>
        <box name="MapCopy" type="map">
            <input port="1" stream="out:OutputAdapter_1"/>
            <output port="1" stream="out:MapCopy_1"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="filePath">"e:/projects/str/testdata.dat"</include>
                    <include field="time">timestamp</include>
                </expressions>
            </target-list>
        </box>
        <module-reference name="TestPythonRef1">
            <input dispatch="round_robin" name="InputStream" port="1" stream="out:MapCopy_1"/>
            <output name="OutputStream" port="1" stream="OutputStream"/>
            <param name="parallel" value="true"/>
            <param name="parallel-region-queue-max-outstanding-tuples" value="2"/>
            <param name="parallel-region-queue-wait-strategy" value="BLOCKING"/>
            <multiplicity number="8" type="concrete"/>
            <param name="file" value="com.example.fullipsori.exerevent.TestPython"/>
        </module-reference>
        <output-stream name="OutputStream"/>
    </add>
</modify>
